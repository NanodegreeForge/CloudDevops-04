name: Backend Continuous Deployment

on:
  workflow_dispatch: # Run workflow manually
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Rependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Checkout Run Lint
        run: cd starter/backend && pipenv run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Use Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        working-directory: starter/backend
        run: |
          pip install pipenv

      - name: Test
        run: cd starter/backend && pipenv install pytest && pipenv run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Configure AWS using github-action-user IAM
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_GITHUB_ACTION_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GITHUB_ACTION_KEY_VALUE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Authenticate AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        working-directory: starter/backend
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag ${{ secrets.AWS_ECR_BACKEND }}:latest .
          docker push ${{ secrets.AWS_ECR_BACKEND }}:latest

      - uses: azure/setup-kubectl@v3
        with:
          version: "v1.25.0" # Using cluster version
        id: install

      - name: Configure Kubeconfig
        working-directory: starter/backend/k8s
        run: |
          aws eks update-kubeconfig --name ${{ secrets.AWS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy Docker Image to Amazon EKS
        working-directory: starter/backend/k8s
        run: |
          kustomize edit set image backend=${{ secrets.AWS_ECR_BACKEND }}:latest
          kustomize build | kubectl apply -f -
